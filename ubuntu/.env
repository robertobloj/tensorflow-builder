# -----------------------------------------------------------------------------------------------------------
# General variables
# -----------------------------------------------------------------------------------------------------------

# gcc compilator version
GCC_VERSION=4.8

# Bazel version what we use for building process
BAZEL_VERSION=0.15.1


# -----------------------------------------------------------------------------------------------------------
# Tensorflow flags
# -----------------------------------------------------------------------------------------------------------

# tensorflow branch from github for building process
TF_VERSION=r1.9

# Do you wish to build TensorFlow with jemalloc as malloc support? [Y/n]
TF_NEED_JEMALLOC=1

# Do you wish to build TensorFlow with Google Cloud Platform support? [Y/n]
TF_NEED_GCP=1

# Do you wish to build TensorFlow with Hadoop File System support? [Y/n]
TF_NEED_HDFS=1

# Do you wish to build TensorFlow with Amazon S3 File System support? [Y/n]
TF_NEED_S3=1

# Do you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]
TF_NEED_KAFKA=1

# Do you wish to build TensorFlow with XLA JIT support? [y/N]
TF_ENABLE_XLA=0

# Do you wish to build TensorFlow with GDR support? [y/N]
TF_NEED_GDR=0

# Do you wish to build TensorFlow with VERBS support? [y/N]
TF_NEED_VERBS=0

# Do you wish to build TensorFlow with OpenCL SYCL support? [y/N]
TF_NEED_OPENCL_SYCL=0

# Do you wish to build TensorFlow with CUDA support? [y/N]
TF_NEED_CUDA=0

# Do you wish to build TensorFlow with MPI support? [y/N]
TF_NEED_MPI=0

# Do you wish to download a fresh release of clang? (Experimental) [y/N]
TF_DOWNLOAD_CLANG=0

# Would you like to interactively configure ./WORKSPACE for Android builds? [y/N]
TF_SET_ANDROID_WORKSPACE=0



# -----------------------------------------------------------------------------------------------------------
# CPU architecture definition (used only for builder/arch/Dockerfile image)
# -----------------------------------------------------------------------------------------------------------

# Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified
# [Default is -march=native]
# Sources:
# https://www.tensorflow.org/install/install_sources
# https://gcc.gnu.org/onlinedocs/gcc-4.5.3/gcc/i386-and-x86_002d64-Options.html
#
# !!!!!!!!
# If you want to use '-mtune=generic' value, please edit docker-compose.xml
# and choose tensorflow-builder-generic image
# !!!!!!!!
# Produce code optimized for the most common IA32/AMD64/EM64T processors.
# CC_OPT_FLAGS=-mtune=generic
#
# This selects the CPU to tune for at compilation time by determining the processor type of the compiling machine.
# Using -mtune=native will produce code optimized for the local machine under the constraints of the selected
# instruction set. Using -march=native will enable all instruction subsets supported by the local machine
# (hence the result might not run on different machines).
CC_OPT_FLAGS=-mtune=native
#
# Intel Core2 CPU with 64-bit extensions, MMX, SSE, SSE2, SSE3 and SSSE3 instruction set support.
# CC_OPT_FLAGS=-mtune=core2
#
# Intel Atom CPU with 64-bit extensions, MMX, SSE, SSE2, SSE3 and SSSE3 instruction set support.
# CC_OPT_FLAGS=-mtune=atom
#
# Intel Pentium4 CPU with MMX, SSE and SSE2 instruction set support.
# CC_OPT_FLAGS=-mtune=pentium4
#
# other architectures if required...
